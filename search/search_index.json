{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to CMSE 890-02 P.Zyla For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. area.md perim.md summation.md temp.md digit.md # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-cmse-890-02-pzyla","text":"For full documentation visit mkdocs.org .","title":"Welcome to CMSE 890-02 P.Zyla"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. area.md perim.md summation.md temp.md digit.md # Other markdown pages, images and other files.","title":"Project layout"},{"location":"area/","text":"Find the area of a rectangle. Given the width and height of a rectangle, calculate the rectangle's area through multiplication. Parameters: Name Type Description Default width int | float The width of the rectangle. Integer or float. required height int | float The height of the rectangle. Integer or float. required Returns: The rectangle's area. An integer or float. Source code in rectangle.py 1 2 3 4 5 6 7 8 9 10 11 12 13 def area_of_rectangle ( width : int | float , height : int | float ) -> int | float : \"\"\"Find the area of a rectangle. Given the width and height of a rectangle, calculate the rectangle's area through multiplication. Args: width: The width of the rectangle. Integer or float. height: The height of the rectangle. Integer or float. Returns: The rectangle's area. An integer or float. \"\"\" return width * height","title":"Rectangle Area"},{"location":"digit/","text":"Checks if a string has digits in it Source code in example_functions.py 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 def have_digits ( s ): \"\"\" Checks if a string has digits in it \"\"\" out = 0 # loop through the string for c in s : # check if the character is a digit if c . isdigit (): out = 1 break return out","title":"Digit"},{"location":"perim/","text":"Find the perimeter of a rectangle. Given the width and height of a rectangle, calculate the rectangle's perimeter as twice the sum of the width and the height. Parameters: Name Type Description Default width int | float The width of the rectangle. Integer or float. required height int | float The height of the rectangle. Integer or float. required Returns: The rectangle's perimeter. Integer or float. Source code in rectangle.py 16 17 18 19 20 21 22 23 24 25 26 27 28 def perimeter_of_rectangle ( width : int | float , height : int | float ) -> int | float : \"\"\"Find the perimeter of a rectangle. Given the width and height of a rectangle, calculate the rectangle's perimeter as twice the sum of the width and the height. Args: width: The width of the rectangle. Integer or float. height: The height of the rectangle. Integer or float. Returns: The rectangle's perimeter. Integer or float. \"\"\" return 2 * ( width + height )","title":"Rectangle Perimeter"},{"location":"sum/","text":"function to sum the 3 numbers Input: 3 numbers a, b, c Output: the sum of a, b, and c author: date: Source code in example_functions.py 4 5 6 7 8 9 10 11 12 13 14 15 16 def my_adder ( a , b , c ): \"\"\" function to sum the 3 numbers Input: 3 numbers a, b, c Output: the sum of a, b, and c author: date: \"\"\" # this is the summation out = a + b + c return out","title":"Summation"},{"location":"temp/","text":"Changes the status of the thermostat based on temperature and desired temperature author date :type temp: Int :type desiredTemp: Int :rtype: String Source code in example_functions.py 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 def my_thermo_stat ( temp , desired_temp ): \"\"\" Changes the status of the thermostat based on temperature and desired temperature author date :type temp: Int :type desiredTemp: Int :rtype: String \"\"\" if temp < desired_temp - 5 : status = 'Heat' elif temp > desired_temp + 5 : status = 'AC' else : status = 'off' return status","title":"Temp"}]}